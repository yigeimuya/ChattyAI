<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cike.chatgpt.repository.mapper.BotMapper">
  <resultMap id="BaseResultMap" type="cike.chatgpt.repository.entity.Bot">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bot_id" jdbcType="VARCHAR" property="botId" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="access_level" jdbcType="TINYINT" property="accessLevel" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="system_prompt" jdbcType="VARCHAR" property="systemPrompt" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="max_tokens" jdbcType="INTEGER" property="maxTokens" />
    <result column="temperature" jdbcType="INTEGER" property="temperature" />
    <result column="top_p" jdbcType="INTEGER" property="topP" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bot_id, `uid`, access_level, `name`, avatar, system_prompt, model, max_tokens, 
    temperature, top_p, description, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cike.chatgpt.repository.entity.BotExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bot
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bot
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cike.chatgpt.repository.entity.BotExample">
    delete from bot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cike.chatgpt.repository.entity.Bot">
    insert into bot (id, bot_id, `uid`, 
      access_level, `name`, avatar, 
      system_prompt, model, max_tokens, 
      temperature, top_p, description, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{botId,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, 
      #{accessLevel,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{systemPrompt,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{maxTokens,jdbcType=INTEGER}, 
      #{temperature,jdbcType=INTEGER}, #{topP,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cike.chatgpt.repository.entity.Bot">
    insert into bot
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="botId != null">
        bot_id,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="accessLevel != null">
        access_level,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="systemPrompt != null">
        system_prompt,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="maxTokens != null">
        max_tokens,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="topP != null">
        top_p,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="botId != null">
        #{botId,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="accessLevel != null">
        #{accessLevel,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="systemPrompt != null">
        #{systemPrompt,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="maxTokens != null">
        #{maxTokens,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=INTEGER},
      </if>
      <if test="topP != null">
        #{topP,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cike.chatgpt.repository.entity.BotExample" resultType="java.lang.Long">
    select count(*) from bot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bot
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.botId != null">
        bot_id = #{record.botId,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.accessLevel != null">
        access_level = #{record.accessLevel,jdbcType=TINYINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.systemPrompt != null">
        system_prompt = #{record.systemPrompt,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.maxTokens != null">
        max_tokens = #{record.maxTokens,jdbcType=INTEGER},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=INTEGER},
      </if>
      <if test="record.topP != null">
        top_p = #{record.topP,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bot
    set id = #{record.id,jdbcType=INTEGER},
      bot_id = #{record.botId,jdbcType=VARCHAR},
      `uid` = #{record.uid,jdbcType=VARCHAR},
      access_level = #{record.accessLevel,jdbcType=TINYINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      system_prompt = #{record.systemPrompt,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      max_tokens = #{record.maxTokens,jdbcType=INTEGER},
      temperature = #{record.temperature,jdbcType=INTEGER},
      top_p = #{record.topP,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cike.chatgpt.repository.entity.Bot">
    update bot
    <set>
      <if test="botId != null">
        bot_id = #{botId,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="accessLevel != null">
        access_level = #{accessLevel,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="systemPrompt != null">
        system_prompt = #{systemPrompt,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="maxTokens != null">
        max_tokens = #{maxTokens,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=INTEGER},
      </if>
      <if test="topP != null">
        top_p = #{topP,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cike.chatgpt.repository.entity.Bot">
    update bot
    set bot_id = #{botId,jdbcType=VARCHAR},
      `uid` = #{uid,jdbcType=VARCHAR},
      access_level = #{accessLevel,jdbcType=TINYINT},
      `name` = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      system_prompt = #{systemPrompt,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      max_tokens = #{maxTokens,jdbcType=INTEGER},
      temperature = #{temperature,jdbcType=INTEGER},
      top_p = #{topP,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>