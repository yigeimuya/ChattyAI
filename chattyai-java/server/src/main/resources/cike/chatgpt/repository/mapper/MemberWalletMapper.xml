<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cike.chatgpt.repository.mapper.MemberWalletMapper">
  <resultMap id="BaseResultMap" type="cike.chatgpt.repository.entity.MemberWallet">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="uid" jdbcType="VARCHAR" property="uid"/>
    <result column="type" jdbcType="TINYINT" property="type"/>
    <result column="total_value" jdbcType="INTEGER" property="totalValue"/>
    <result column="available_value" jdbcType="INTEGER" property="availableValue"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `uid`, `type`, total_value, available_value, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cike.chatgpt.repository.entity.MemberWalletExample"
    resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from member_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from member_wallet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from member_wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cike.chatgpt.repository.entity.MemberWalletExample">
    delete from member_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="cike.chatgpt.repository.entity.MemberWallet">
    insert into member_wallet (id, `uid`, `type`,
                               total_value, available_value, create_time,
                               update_time)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT},
            #{totalValue,jdbcType=INTEGER}, #{availableValue,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cike.chatgpt.repository.entity.MemberWallet">
    insert into member_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="totalValue != null">
        total_value,
      </if>
      <if test="availableValue != null">
        available_value,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="totalValue != null">
        #{totalValue,jdbcType=INTEGER},
      </if>
      <if test="availableValue != null">
        #{availableValue,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cike.chatgpt.repository.entity.MemberWalletExample"
    resultType="java.lang.Long">
    select count(*) from member_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_wallet
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.totalValue != null">
        total_value = #{record.totalValue,jdbcType=INTEGER},
      </if>
      <if test="record.availableValue != null">
        available_value = #{record.availableValue,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_wallet
    set id = #{record.id,jdbcType=INTEGER},
    `uid` = #{record.uid,jdbcType=VARCHAR},
    `type` = #{record.type,jdbcType=TINYINT},
    total_value = #{record.totalValue,jdbcType=INTEGER},
    available_value = #{record.availableValue,jdbcType=INTEGER},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cike.chatgpt.repository.entity.MemberWallet">
    update member_wallet
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="totalValue != null">
        total_value = #{totalValue,jdbcType=INTEGER},
      </if>
      <if test="availableValue != null">
        available_value = #{availableValue,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cike.chatgpt.repository.entity.MemberWallet">
    update member_wallet
    set `uid`           = #{uid,jdbcType=VARCHAR},
        `type`          = #{type,jdbcType=TINYINT},
        total_value     = #{totalValue,jdbcType=INTEGER},
        available_value = #{availableValue,jdbcType=INTEGER},
        create_time     = #{createTime,jdbcType=TIMESTAMP},
        update_time     = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>